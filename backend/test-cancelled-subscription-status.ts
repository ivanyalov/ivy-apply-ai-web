import { subscriptionService } from "./src/services/subscription.service";
import { pool } from "./src/config/database";

async function testCancelledSubscriptionStatus() {
	try {
		console.log("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–º–µ–Ω–µ–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏...\n");

		// –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –æ—Ç–º–µ–Ω–µ–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π
		const usersResult = await pool.query(`
			SELECT 
				u.id, 
				u.email,
				u.trial_used,
				s.status,
				s.plan_type,
				s.cloudpayments_subscription_id
			FROM users u
			LEFT JOIN subscriptions s ON u.id = s.user_id
			WHERE s.status = 'cancelled'
			ORDER BY s.updated_at DESC
			LIMIT 1
		`);

		const cancelledUser = usersResult.rows[0];

		if (!cancelledUser) {
			console.log("‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–º–∏ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è");

			// –ü–æ–∫–∞–∂–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ–¥–ø–∏—Å–∫–∞–º–∏
			const allUsersResult = await pool.query(`
				SELECT 
					u.email,
					s.status,
					s.plan_type,
					s.cloudpayments_subscription_id
				FROM users u
				LEFT JOIN subscriptions s ON u.id = s.user_id
				WHERE s.id IS NOT NULL
				ORDER BY s.updated_at DESC
				LIMIT 5
			`);

			console.log("\nüìã –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –ø–æ–¥–ø–∏—Å–∫–∞–º–∏:");
			allUsersResult.rows.forEach((user, index) => {
				console.log(`${index + 1}. ${user.email}: ${user.status} (${user.plan_type})`);
			});

			return;
		}

		console.log(`üë§ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: ${cancelledUser.email}`);
		console.log(`üìã –ü–æ–¥–ø–∏—Å–∫–∞ –≤ –ë–î:`);
		console.log(`   - Status: ${cancelledUser.status}`);
		console.log(`   - Plan Type: ${cancelledUser.plan_type}`);
		console.log(`   - CloudPayments ID: ${cancelledUser.cloudpayments_subscription_id || "–Ω–µ—Ç"}`);
		console.log(`   - Trial Used: ${cancelledUser.trial_used}`);

		// –¢–µ—Å—Ç–∏—Ä—É–µ–º getSubscriptionStatus
		console.log("\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º getSubscriptionStatus...");
		const subscriptionStatus = await subscriptionService.getSubscriptionStatus(cancelledUser.id);

		console.log("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç getSubscriptionStatus:");
		console.log(JSON.stringify(subscriptionStatus, null, 2));

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ CloudPayments ID –ù–ï –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –¥–ª—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫
		console.log(`\nüîç –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ cloudPaymentsSubscriptionId:`);
		console.log(`   - –ó–Ω–∞—á–µ–Ω–∏–µ: ${subscriptionStatus.cloudPaymentsSubscriptionId}`);
		console.log(`   - –¢–∏–ø: ${typeof subscriptionStatus.cloudPaymentsSubscriptionId}`);
		console.log(`   - === null: ${subscriptionStatus.cloudPaymentsSubscriptionId === null}`);
		console.log(
			`   - === undefined: ${subscriptionStatus.cloudPaymentsSubscriptionId === undefined}`
		);

		if (
			subscriptionStatus.cloudPaymentsSubscriptionId === null ||
			subscriptionStatus.cloudPaymentsSubscriptionId === undefined
		) {
			console.log("\n‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: CloudPayments ID –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –¥–ª—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫");
		} else {
			console.log("\n‚ùå –û–®–ò–ë–ö–ê: CloudPayments ID –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –¥–ª—è –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏");
		}

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
		console.log(`\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–µ–π:`);
		console.log(`   - hasAccess: ${subscriptionStatus.hasAccess} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å false)`);
		console.log(`   - type: ${subscriptionStatus.type} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å null)`);
		console.log(`   - status: ${subscriptionStatus.status} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å cancelled)`);
		console.log(
			`   - cloudPaymentsSubscriptionId: ${subscriptionStatus.cloudPaymentsSubscriptionId} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å null)`
		);

		console.log("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!");
	} catch (error) {
		console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:", error);
	} finally {
		await pool.end();
	}
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testCancelledSubscriptionStatus();
