import { pool } from "./src/config/database";
import { updateSubscription } from "./src/models/Subscription";

async function updateExpiredSubscriptions() {
	try {
		console.log("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–µ–∫—à–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏...\n");

		// –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å—Ç–µ–∫–ª–∏
		const expiredSubscriptionsResult = await pool.query(`
			SELECT 
				id, 
				user_id, 
				status, 
				plan_type, 
				expires_at,
				created_at
			FROM subscriptions 
			WHERE status = 'active' 
			AND expires_at IS NOT NULL 
			AND expires_at <= CURRENT_TIMESTAMP
			ORDER BY created_at DESC
		`);

		const expiredSubscriptions = expiredSubscriptionsResult.rows;

		if (expiredSubscriptions.length === 0) {
			console.log("‚úÖ –ò—Å—Ç–µ–∫—à–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ");
			return;
		}

		console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${expiredSubscriptions.length} –∏—Å—Ç–µ–∫—à–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫:\n`);

		for (const subscription of expiredSubscriptions) {
			console.log(`üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É ${subscription.id}:`);
			console.log(`   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${subscription.user_id}`);
			console.log(`   - –¢–∏–ø: ${subscription.plan_type}`);
			console.log(`   - –ò—Å—Ç–µ–∫–ª–∞: ${subscription.expires_at}`);
			console.log(`   - –°–æ–∑–¥–∞–Ω–∞: ${subscription.created_at}`);

			// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ "unsubscribed"
			await updateSubscription(subscription.id, {
				status: "unsubscribed",
			});

			console.log(`   ‚úÖ –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ "unsubscribed"\n`);
		}

		console.log(`üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${expiredSubscriptions.length} –ø–æ–¥–ø–∏—Å–æ–∫`);
	} catch (error) {
		console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–æ–∫:", error);
	} finally {
		await pool.end();
	}
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
updateExpiredSubscriptions();
