import { pool } from "./src/config/database";
import { getSubscriptionByUserId, hasTrialAvailable } from "./src/models/Subscription";

async function testTrialLogic() {
	try {
		console.log("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞...\n");

		// –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é hasTrialAvailable
		console.log("1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º hasTrialAvailable:");

		// –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
		const usersResult = await pool.query("SELECT id, email FROM users LIMIT 3");
		const users = usersResult.rows;

		for (const user of users) {
			console.log(`\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.email} (ID: ${user.id})`);

			// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
			const trialAvailable = await hasTrialAvailable(user.id);
			console.log(`   –ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –¥–æ—Å—Ç—É–ø–µ–Ω: ${trialAvailable}`);

			// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–¥–ø–∏—Å–∫—É
			const subscription = await getSubscriptionByUserId(user.id);
			if (subscription) {
				console.log(`   –¢–µ–∫—É—â–∞—è –ø–æ–¥–ø–∏—Å–∫–∞:`);
				console.log(`     - ID: ${subscription.id}`);
				console.log(`     - –°—Ç–∞—Ç—É—Å: ${subscription.status}`);
				console.log(`     - –¢–∏–ø: ${subscription.planType}`);
				console.log(`     - –ù–∞—á–∞–ª–æ: ${subscription.startDate}`);
				console.log(`     - –ò—Å—Ç–µ–∫–∞–µ—Ç: ${subscription.expiresAt}`);
				console.log(`     - TransactionId: ${subscription.cloudPaymentsTransactionId || "–Ω–µ—Ç"}`);
			} else {
				console.log(`   –ü–æ–¥–ø–∏—Å–∫–∏ –Ω–µ—Ç`);
			}
		}

		// –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–æ–∫
		console.log("\n\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–æ–∫:");

		for (const user of users) {
			const subscription = await getSubscriptionByUserId(user.id);
			if (subscription && subscription.status === "active") {
				console.log(`\nüîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.email}:`);

				const currentDate = new Date();
				const isExpired = subscription.expiresAt && subscription.expiresAt <= currentDate;

				console.log(`   - –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: ${currentDate}`);
				console.log(`   - –î–∞—Ç–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è: ${subscription.expiresAt}`);
				console.log(`   - –ò—Å—Ç–µ–∫–ª–∞: ${isExpired}`);

				if (isExpired) {
					console.log(`   ‚ö†Ô∏è  –ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞, –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –Ω–∞ "unsubscribed"`);
				} else {
					console.log(`   ‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞`);
				}
			}
		}

		console.log("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!");
	} catch (error) {
		console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:", error);
	} finally {
		await pool.end();
	}
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testTrialLogic();
