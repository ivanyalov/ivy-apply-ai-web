import axios from "axios";

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–æ–∫ —Å CloudPayments
 */

const BASE_URL = "http://localhost:3001/api";

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const testTransactionId = "3041276387";
const testSubscriptionId = "test_subscription_123";
const testUserId = "test_user_uuid";

async function testSubscriptionIntegration() {
	console.log("üß™ Testing subscription integration...\n");

	try {
		// –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ CloudPayments
		console.log("1Ô∏è‚É£ Testing get transaction status...");
		try {
			const transactionResponse = await axios.post(
				`${BASE_URL}/payments/cloudpayments/get-transaction`,
				{
					transactionId: testTransactionId,
				}
			);
			console.log("‚úÖ Transaction status response:", transactionResponse.data);
		} catch (error) {
			console.log(
				"‚ö†Ô∏è Transaction status test failed (expected if CloudPayments not configured):",
				error.response?.data || error.message
			);
		}

		// –¢–µ—Å—Ç 2: –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
		console.log("\n2Ô∏è‚É£ Testing payment success endpoint...");
		try {
			const paymentResponse = await axios.post(
				`${BASE_URL}/payments/cloudpayments/payment-success`,
				{
					transactionId: testTransactionId,
					subscriptionId: testSubscriptionId,
					accountId: testUserId,
					amount: 990.0,
					currency: "RUB",
					status: "Completed",
					token: "test_card_token_123",
				}
			);
			console.log("‚úÖ Payment success response:", paymentResponse.data);
		} catch (error) {
			console.log(
				"‚ö†Ô∏è Payment success test failed (expected if not authenticated):",
				error.response?.data || error.message
			);
		}

		// –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏ (–±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏)
		console.log("\n3Ô∏è‚É£ Testing subscription status endpoint (without auth)...");
		try {
			const statusResponse = await axios.get(`${BASE_URL}/subscriptions/status`);
			console.log("‚úÖ Subscription status response:", statusResponse.data);
		} catch (error) {
			console.log(
				"‚úÖ Subscription status test failed as expected (authentication required):",
				error.response?.status
			);
		}

		console.log("\nüéØ Integration tests completed!");
		console.log("\nüìù Next steps:");
		console.log("1. Start the server: npm run dev");
		console.log("2. Test with authenticated user");
		console.log("3. Check CloudPayments webhook integration");
	} catch (error) {
		console.error("‚ùå Test failed:", error);
	}
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
if (require.main === module) {
	testSubscriptionIntegration();
}
