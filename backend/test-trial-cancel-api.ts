import axios from "axios";
import dotenv from "dotenv";

dotenv.config();

const BASE_URL = `http://localhost:${process.env.PORT || 8000}`;
const TEST_EMAIL = "test-trial-cancel-api@example.com";
const TEST_PASSWORD = "testpassword123";

async function testTrialCancellationAPI() {
	try {
		console.log("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω—ã –ø—Ä–æ–±–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ —á–µ—Ä–µ–∑ API...\n");

		// 1. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		console.log("1Ô∏è‚É£ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...");
		try {
			const registerResponse = await axios.post(`${BASE_URL}/api/auth/signup`, {
				email: TEST_EMAIL,
				password: TEST_PASSWORD,
			});
			console.log(`   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ${registerResponse.data.user.id}`);
		} catch (error: any) {
			if (error.response?.status === 409) {
				console.log("   ‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...");
			} else {
				throw error;
			}
		}

		// 2. –õ–æ–≥–∏–Ω–∏–º—Å—è
		console.log("\n2Ô∏è‚É£ –õ–æ–≥–∏–Ω–∏–º—Å—è...");
		const loginResponse = await axios.post(`${BASE_URL}/api/auth/signin`, {
			email: TEST_EMAIL,
			password: TEST_PASSWORD,
		});
		const token = loginResponse.data.token;
		console.log(`   ‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: ${token.substring(0, 20)}...`);

		// 3. –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–±–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É
		console.log("\n3Ô∏è‚É£ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–±–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É...");
		const trialResponse = await axios.post(
			`${BASE_URL}/api/subscriptions/start-trial`,
			{},
			{
				headers: {
					Authorization: `Bearer ${token}`,
					"Content-Type": "application/json",
				},
			}
		);
		console.log(`   ‚úÖ –ü—Ä–æ–±–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞:`, trialResponse.data);

		// 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
		console.log("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏...");
		const statusResponse = await axios.get(`${BASE_URL}/api/subscriptions/status`, {
			headers: {
				Authorization: `Bearer ${token}`,
			},
		});
		console.log(`   üìä –°—Ç–∞—Ç—É—Å –¥–æ –æ—Ç–º–µ–Ω—ã:`, statusResponse.data);

		// 5. –û—Ç–º–µ–Ω—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É —á–µ—Ä–µ–∑ CloudPayments API
		console.log("\n5Ô∏è‚É£ –û—Ç–º–µ–Ω—è–µ–º –ø—Ä–æ–±–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É...");
		const cancelResponse = await axios.post(
			`${BASE_URL}/api/payments/cloudpayments/cancel-subscription`,
			{},
			{
				headers: {
					Authorization: `Bearer ${token}`,
					"Content-Type": "application/json",
				},
			}
		);
		console.log(`   ‚úÖ –û—Ç–≤–µ—Ç API –æ—Ç–º–µ–Ω—ã:`, cancelResponse.data);

		// 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –æ—Ç–º–µ–Ω—ã
		console.log("\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –æ—Ç–º–µ–Ω—ã...");
		const statusAfterResponse = await axios.get(`${BASE_URL}/api/subscriptions/status`, {
			headers: {
				Authorization: `Bearer ${token}`,
			},
		});
		console.log(`   üìä –°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –æ—Ç–º–µ–Ω—ã:`, statusAfterResponse.data);

		// 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
		if (statusAfterResponse.data.status === "cancelled") {
			console.log("\nüéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù! –ü—Ä–æ–±–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ —á–µ—Ä–µ–∑ API");
		} else {
			console.error("\n‚ùå –¢–ï–°–¢ –ü–†–û–í–ê–õ–ï–ù! –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞ 'cancelled'");
			console.error(`   –û–∂–∏–¥–∞–ª–æ—Å—å: cancelled, –ø–æ–ª—É—á–µ–Ω–æ: ${statusAfterResponse.data.status}`);
		}
	} catch (error: any) {
		if (error.response) {
			console.error("‚ùå –û—à–∏–±–∫–∞ API:", {
				status: error.response.status,
				statusText: error.response.statusText,
				data: error.response.data,
				url: error.config?.url,
			});
		} else {
			console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:", error.message);
		}
	}
}

testTrialCancellationAPI();
