import { pool } from "./src/config/database";
import { subscriptionService } from "./src/services/subscription.service";

async function testTypeLogic() {
	try {
		console.log("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É type –≤ getSubscriptionStatus...\n");

		// –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
		const usersResult = await pool.query("SELECT id, email FROM users LIMIT 3");
		const users = usersResult.rows;

		for (const user of users) {
			console.log(`\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.email} (ID: ${user.id})`);

			// –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
			const subscriptionStatus = await subscriptionService.getSubscriptionStatus(user.id);

			console.log(`   –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏:`);
			console.log(`     - hasAccess: ${subscriptionStatus.hasAccess}`);
			console.log(`     - type: ${subscriptionStatus.type || "null (–Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏)"}`);
			console.log(`     - status: ${subscriptionStatus.status}`);
			console.log(`     - expiresAt: ${subscriptionStatus.expiresAt || "null"}`);
			console.log(`     - trialUsed: ${subscriptionStatus.trialUsed}`);

			// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É
			if (subscriptionStatus.hasAccess) {
				console.log(`   ‚úÖ –õ–æ–≥–∏–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞: hasAccess=true, type=${subscriptionStatus.type}`);
			} else {
				if (subscriptionStatus.type === null) {
					console.log(`   ‚úÖ –õ–æ–≥–∏–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞: hasAccess=false, type=null`);
				} else {
					console.log(
						`   ‚ùå –õ–æ–≥–∏–∫–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞: hasAccess=false, –Ω–æ type=${subscriptionStatus.type}`
					);
				}
			}
		}

		console.log("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ type –∑–∞–≤–µ—Ä—à–µ–Ω–æ!");
	} catch (error) {
		console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:", error);
	} finally {
		await pool.end();
	}
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testTypeLogic();
