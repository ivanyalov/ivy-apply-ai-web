import { pool } from "./src/config/database";
import dotenv from "dotenv";

dotenv.config();

async function debugUsers() {
	try {
		console.log("üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –í–´–ì–†–£–ó–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –ò –ü–û–î–ü–ò–°–û–ö");
		console.log("=".repeat(80));

		const startDate = "2025-09-25 00:00:00";

		// 1. –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å 25.09.2025
		console.log("\nüìã –í–°–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò –° 25.09.2025:");
		console.log("-".repeat(50));

		const allUsersResult = await pool.query(
			`
			SELECT 
				id, 
				email, 
				created_at,
				email_verified,
				trial_used
			FROM users 
			WHERE created_at >= $1 
			ORDER BY created_at DESC
		`,
			[startDate]
		);

		console.log(`–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${allUsersResult.rows.length}`);
		allUsersResult.rows.forEach((user, index) => {
			console.log(`${index + 1}. ID: ${user.id}`);
			console.log(`   Email: ${user.email}`);
			console.log(`   –°–æ–∑–¥–∞–Ω: ${user.created_at}`);
			console.log(`   Email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω: ${user.email_verified}`);
			console.log(`   Trial –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω: ${user.trial_used}`);
			console.log("");
		});

		// 2. –í—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ —Å 25.09.2025
		console.log("\nüìã –í–°–ï –ü–û–î–ü–ò–°–ö–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –° 25.09.2025:");
		console.log("-".repeat(50));

		const allSubscriptionsResult = await pool.query(
			`
			SELECT 
				s.id as subscription_id,
				s.user_id,
				u.email,
				s.status,
				s.plan_type,
				s.start_date,
				s.expires_at,
				s.cancelled_at,
				s.created_at as subscription_created,
				s.cloudpayments_subscription_id
			FROM subscriptions s
			INNER JOIN users u ON s.user_id = u.id
			WHERE u.created_at >= $1 
			ORDER BY s.created_at DESC
		`,
			[startDate]
		);

		console.log(`–ù–∞–π–¥–µ–Ω–æ –ø–æ–¥–ø–∏—Å–æ–∫: ${allSubscriptionsResult.rows.length}`);
		allSubscriptionsResult.rows.forEach((sub, index) => {
			console.log(`${index + 1}. –ü–æ–¥–ø–∏—Å–∫–∞ ID: ${sub.subscription_id}`);
			console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${sub.email} (${sub.user_id})`);
			console.log(`   –°—Ç–∞—Ç—É—Å: ${sub.status}`);
			console.log(`   –¢–∏–ø: ${sub.plan_type}`);
			console.log(`   –°–æ–∑–¥–∞–Ω–∞: ${sub.subscription_created}`);
			console.log(`   –ù–∞—á–∞–ª–æ: ${sub.start_date}`);
			console.log(`   –ò—Å—Ç–µ–∫–∞–µ—Ç: ${sub.expires_at}`);
			console.log(`   –û—Ç–º–µ–Ω–µ–Ω–∞: ${sub.cancelled_at}`);
			console.log(`   CloudPayments ID: ${sub.cloudpayments_subscription_id || "–Ω–µ—Ç"}`);
			console.log("");
		});

		// 3. –ê–Ω–∞–ª–∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
		console.log("\nüìä –ê–ù–ê–õ–ò–ó –ü–û –ö–ê–¢–ï–ì–û–†–ò–Ø–ú:");
		console.log("-".repeat(50));

		// –ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–±–Ω—ã–µ
		const activeTrialResult = await pool.query(
			`
			SELECT u.email, s.status, s.plan_type, s.expires_at
			FROM subscriptions s
			INNER JOIN users u ON s.user_id = u.id
			WHERE s.status = 'active' 
			AND s.plan_type = 'trial'
			AND (s.expires_at IS NULL OR s.expires_at > NOW())
			AND u.created_at >= $1
		`,
			[startDate]
		);

		console.log(`üÜì –ê–ö–¢–ò–í–ù–´–ï –ü–†–û–ë–ù–´–ï (${activeTrialResult.rows.length}):`);
		activeTrialResult.rows.forEach((user) => {
			console.log(`   - ${user.email} (–∏—Å—Ç–µ–∫–∞–µ—Ç: ${user.expires_at})`);
		});

		// –ó–∞–∫–æ–Ω—á–∏–≤—à–∏–µ—Å—è –ø—Ä–æ–±–Ω—ã–µ
		const expiredTrialResult = await pool.query(
			`
			SELECT u.email, s.status, s.plan_type, s.expires_at, s.cancelled_at
			FROM subscriptions s
			INNER JOIN users u ON s.user_id = u.id
			WHERE s.plan_type = 'trial'
			AND (s.status = 'cancelled' OR s.status = 'unsubscribed' OR 
				 (s.status = 'active' AND s.expires_at IS NOT NULL AND s.expires_at <= NOW()))
			AND u.created_at >= $1
		`,
			[startDate]
		);

		console.log(`\n‚è∞ –ó–ê–ö–û–ù–ß–ò–í–®–ò–ï–°–Ø –ü–†–û–ë–ù–´–ï (${expiredTrialResult.rows.length}):`);
		expiredTrialResult.rows.forEach((user) => {
			console.log(`   - ${user.email}`);
			console.log(`     –°—Ç–∞—Ç—É—Å: ${user.status}`);
			console.log(`     –ò—Å—Ç–µ–∫–∞–µ—Ç: ${user.expires_at}`);
			console.log(`     –û—Ç–º–µ–Ω–µ–Ω–∞: ${user.cancelled_at}`);
		});

		// –ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–µ–º–∏—É–º
		const activePremiumResult = await pool.query(
			`
			SELECT u.email, s.status, s.plan_type, s.expires_at
			FROM subscriptions s
			INNER JOIN users u ON s.user_id = u.id
			WHERE s.status = 'active' 
			AND s.plan_type = 'premium'
			AND (s.expires_at IS NULL OR s.expires_at > NOW())
			AND u.created_at >= $1
		`,
			[startDate]
		);

		console.log(`\nüíé –ê–ö–¢–ò–í–ù–´–ï –ü–†–ï–ú–ò–£–ú (${activePremiumResult.rows.length}):`);
		activePremiumResult.rows.forEach((user) => {
			console.log(`   - ${user.email} (–∏—Å—Ç–µ–∫–∞–µ—Ç: ${user.expires_at})`);
		});

		// –ó–∞–∫–æ–Ω—á–∏–≤—à–∏–µ—Å—è –ø—Ä–µ–º–∏—É–º
		const expiredPremiumResult = await pool.query(
			`
			SELECT u.email, s.status, s.plan_type, s.expires_at, s.cancelled_at
			FROM subscriptions s
			INNER JOIN users u ON s.user_id = u.id
			WHERE s.plan_type = 'premium'
			AND (s.status = 'cancelled' OR s.status = 'unsubscribed' OR 
				 (s.status = 'active' AND s.expires_at IS NOT NULL AND s.expires_at <= NOW()))
			AND u.created_at >= $1
		`,
			[startDate]
		);

		console.log(`\nüí∏ –ó–ê–ö–û–ù–ß–ò–í–®–ò–ï–°–Ø –ü–†–ï–ú–ò–£–ú (${expiredPremiumResult.rows.length}):`);
		expiredPremiumResult.rows.forEach((user) => {
			console.log(`   - ${user.email}`);
			console.log(`     –°—Ç–∞—Ç—É—Å: ${user.status}`);
			console.log(`     –ò—Å—Ç–µ–∫–∞–µ—Ç: ${user.expires_at}`);
			console.log(`     –û—Ç–º–µ–Ω–µ–Ω–∞: ${user.cancelled_at}`);
		});

		console.log("\n" + "=".repeat(80));
	} catch (error) {
		console.error("‚ùå –û—à–∏–±–∫–∞:", error);
	} finally {
		await pool.end();
	}
}

debugUsers();
