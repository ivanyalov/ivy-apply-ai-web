import React, { useState } from "react";
import { useAuth } from "../../shared/hooks/useAuth";
import { useSubscription } from "../../shared/hooks/useSubscription";
import { useTranslation } from "../../shared/hooks/useTranslation";

const publicId = import.meta.env.VITE_CLOUDPAYMENTS_PUBLIC_ID;

// –î–ª—è TypeScript:
declare global {
	interface Window {
		cp: any;
	}
}

interface CloudPaymentsResponse {
	transactionId: string;
	subscriptionId?: string;
	status: string;
	amount: number;
	currency: string;
	token?: string;
}

interface SubscribeButtonProps {
	agreedToRecurring: boolean;
}

const SubscribeButton: React.FC<SubscribeButtonProps> = ({ agreedToRecurring }) => {
	const [isLoading, setIsLoading] = useState(false);
	const { user } = useAuth();
	const { t } = useTranslation();
	const { handlePaymentSuccess } = useSubscription();

	const handleCloudPayments = () => {
		if (!user?.id) {
			alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏");
			return;
		}

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å CloudPayments
		if (typeof window.cp === "undefined") {
			console.error("‚ùå CloudPayments –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω!");
			alert("–û—à–∏–±–∫–∞: CloudPayments –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
			return;
		}

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º Public ID
		if (!publicId || publicId === "test_api_00000000000000000000002") {
			console.warn("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–π Public ID. TransactionId –º–æ–∂–µ—Ç –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è.");
		}

		console.log("‚úÖ CloudPayments –¥–æ—Å—Ç—É–ø–µ–Ω:", window.cp);
		console.log("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç–æ–¥—ã:", Object.keys(window.cp));
		console.log("üìã Public ID:", publicId);

		setIsLoading(true);

		try {
			// –°–æ–∑–¥–∞–µ–º –≤–∏–¥–∂–µ—Ç CloudPayments —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
			const payments = new window.cp.CloudPayments({
				yandexPaySupport: false,
				applePaySupport: false,
				googlePaySupport: false,
				masterPassSupport: false,
				tinkoffInstallmentSupport: false,
			});
			console.log("‚úÖ –í–∏–¥–∂–µ—Ç CloudPayments —Å–æ–∑–¥–∞–Ω:", payments);

			// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ oncomplete —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
			payments.oncomplete = (result: any) => {
				console.log("üîÑ oncomplete —Å–æ–±—ã—Ç–∏–µ –≤—ã–∑–≤–∞–Ω–æ!", result);

				// –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø–ª–∞—Ç–µ–∂–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º status –≤–º–µ—Å—Ç–æ success
				if (result && result.status === "success") {
					console.log("‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω!", result);

					// –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ –±—ç–∫—ç–Ω–¥
					const paymentData: CloudPaymentsResponse = {
						transactionId:
							result.data?.transactionId ||
							result.transactionId ||
							result.id ||
							`transaction_${Date.now()}`,
						subscriptionId: result.subscriptionId || result.subscription?.id,
						status: "Completed",
						amount: 990,
						currency: "RUB",
						token: result.token,
					};

					console.log("üíæ –ì–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:", paymentData);

					// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ –±—ç–∫—ç–Ω–¥
					handlePaymentSuccessWrapper(paymentData);
				} else {
					console.log("‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ —É–¥–∞–ª—Å—è", result);
					setIsLoading(false);
				}
			};

			// –°–æ–∑–¥–∞–µ–º —á–µ–∫ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
			const receipt = {
				Items: [
					{
						label: "–ü–æ–¥–ø–∏—Å–∫–∞ Ivy Apply AI - –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –¥–æ—Å—Ç—É–ø",
						price: 990.0,
						quantity: 1.0,
						amount: 990.0,
						vat: 20,
						method: 0,
						object: 0,
					},
				],
				taxationSystem: 0,
				email: user.email,
				phone: "",
				isBso: false,
				amounts: {
					electronic: 990.0,
					advancePayment: 0.0,
					credit: 0.0,
					provision: 0.0,
				},
			};

			// –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –û–ë–´–ß–ù–û–ì–û –ø–ª–∞—Ç–µ–∂–∞ (—É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂)
			const data = {
				CloudPayments: {
					CustomerReceipt: receipt,
				},
			};

			console.log("üí≥ –ó–∞–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏...");

			// –û–±—ã—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –ë–ï–ó –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ recurrent
			payments
				.pay("charge", {
					publicId: publicId,
					description: "–ü–æ–¥–ø–∏—Å–∫–∞ Ivy Apply AI - —É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂",
					amount: 990,
					currency: "RUB",
					invoiceId: "subscription-setup-" + Date.now(),
					accountId: user.id, // –î–æ–±–∞–≤–ª—è–µ–º –¥–ª—è —Å–≤—è–∑–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
					data: data,
				})
				.then((result: any) => {
					// –í–∏–¥–∂–µ—Ç –ù–ï —Å–æ–∑–¥–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É, —Ç–æ–ª—å–∫–æ –ø–æ–ª—É—á–∞–µ—Ç —Ç–æ–∫–µ–Ω
					console.log("‚úÖ –ü–µ—Ä–≤—ã–π –ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω, —Ç–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω!", result);

					// Webhook –ø–æ–ª—É—á–∏—Ç Token –∏ —Å–æ–∑–¥–∞—Å—Ç –ø–æ–¥–ø–∏—Å–∫—É —á–µ—Ä–µ–∑ API
					// –ó–¥–µ—Å—å –º—ã –ø–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ transactionId
					const paymentData: CloudPaymentsResponse = {
						transactionId:
							result.data?.transactionId ||
							result.transactionId ||
							result.id ||
							`transaction_${Date.now()}`,
						status: "Completed",
						amount: 990,
						currency: "RUB",
						// subscriptionId –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –≤ webhook —á–µ—Ä–µ–∑ API
					};

					handlePaymentSuccessWrapper(paymentData);
				})
				.catch((error: any) => {
					console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞—Ç–µ–∂–∞:", error);
					alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞—Ç–µ–∂–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
					setIsLoading(false);
				});

			console.log("‚úÖ –í–∏–¥–∂–µ—Ç CloudPayments –∑–∞–ø—É—â–µ–Ω");
		} catch (error) {
			console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–∏–¥–∂–µ—Ç–∞ CloudPayments:", error);
			alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Ñ–æ—Ä–º—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.");
			setIsLoading(false);
		}
	};

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ useSubscription —Ö—É–∫
	const handlePaymentSuccessWrapper = async (paymentData: CloudPaymentsResponse) => {
		try {
			console.log("üíæ Processing payment success:", paymentData);

			// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö—É–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –±—ç–∫—ç–Ω–¥
			await handlePaymentSuccess({
				...paymentData,
				accountId: user?.id || "",
			});

			console.log("‚úÖ Payment processed successfully");

			// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏
			alert("–ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞! TransactionId —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.");

			// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
			window.location.reload();
		} catch (error) {
			console.error("‚ùå Error processing payment:", error);
			alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–∫–∏. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.");
		} finally {
			setIsLoading(false);
		}
	};

	return (
		<button
			onClick={handleCloudPayments}
			className={`w-full py-3 px-6 rounded-xl text-lg font-semibold transition-all duration-300 shadow-md hover:shadow-lg transform hover:-translate-y-1 ${
				agreedToRecurring && user?.email_verified && !isLoading
					? "bg-harvard-crimson text-white hover:bg-red-800"
					: "bg-gray-300 text-gray-500 cursor-not-allowed"
			}`}
		>
			{!user?.email_verified
				? t.subscription.verifyEmailButton
				: isLoading
				? t.subscription.processing
				: t.subscription.subscribeButton}
		</button>
	);
};

export default SubscribeButton;
